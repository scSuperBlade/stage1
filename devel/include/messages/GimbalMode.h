// Generated by gencpp from file messages/GimbalMode.msg
// DO NOT EDIT!


#ifndef MESSAGES_MESSAGE_GIMBALMODE_H
#define MESSAGES_MESSAGE_GIMBALMODE_H

#include <ros/service_traits.h>


#include <messages/GimbalModeRequest.h>
#include <messages/GimbalModeResponse.h>


namespace messages
{

struct GimbalMode
{

typedef GimbalModeRequest Request;
typedef GimbalModeResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct GimbalMode
} // namespace messages


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::messages::GimbalMode > {
  static const char* value()
  {
    return "fcba9db77a7e7488758d65b81c19e513";
  }

  static const char* value(const ::messages::GimbalMode&) { return value(); }
};

template<>
struct DataType< ::messages::GimbalMode > {
  static const char* value()
  {
    return "messages/GimbalMode";
  }

  static const char* value(const ::messages::GimbalMode&) { return value(); }
};


// service_traits::MD5Sum< ::messages::GimbalModeRequest> should match 
// service_traits::MD5Sum< ::messages::GimbalMode > 
template<>
struct MD5Sum< ::messages::GimbalModeRequest>
{
  static const char* value()
  {
    return MD5Sum< ::messages::GimbalMode >::value();
  }
  static const char* value(const ::messages::GimbalModeRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::messages::GimbalModeRequest> should match 
// service_traits::DataType< ::messages::GimbalMode > 
template<>
struct DataType< ::messages::GimbalModeRequest>
{
  static const char* value()
  {
    return DataType< ::messages::GimbalMode >::value();
  }
  static const char* value(const ::messages::GimbalModeRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::messages::GimbalModeResponse> should match 
// service_traits::MD5Sum< ::messages::GimbalMode > 
template<>
struct MD5Sum< ::messages::GimbalModeResponse>
{
  static const char* value()
  {
    return MD5Sum< ::messages::GimbalMode >::value();
  }
  static const char* value(const ::messages::GimbalModeResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::messages::GimbalModeResponse> should match 
// service_traits::DataType< ::messages::GimbalMode > 
template<>
struct DataType< ::messages::GimbalModeResponse>
{
  static const char* value()
  {
    return DataType< ::messages::GimbalMode >::value();
  }
  static const char* value(const ::messages::GimbalModeResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // MESSAGES_MESSAGE_GIMBALMODE_H
